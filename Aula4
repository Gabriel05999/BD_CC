select * -- LEFT JOING
from movies as m
	left join directors as d
		on m.director_id = d.id;
        
select * -- RIGHT JOING
from movies as m
	right join directors as d
		on m.director_id = d.id;

--------------------------------------------------------
-- EXERCICIO 

-- ex 1 Liste todos os diretores e os 
-- filmes que eles dirigiram 

SELECT d.name AS diretor, m.name AS filme
FROM directors d
LEFT JOIN movies m ON d.id = m.director_id;

-- ex 2 Liste todos os filmes e seus tickets vendidos
-- Liste todos os filmes, seus diretores e os tickets vendidos 

SELECT m.name AS filme, COUNT(t.id) AS tickets_vendidos
FROM movies m
LEFT JOIN tickets t ON m.id = t.movie_id
GROUP BY m.id;

-- ex 3 Liste todos os diretores, incluindo 
-- aqueles que não dirigiram nenhum filme

select *
from directors;

SELECT m.name AS filme, d.name AS diretor, COUNT(t.id) AS tickets_vendidos
FROM movies m
LEFT JOIN directors d ON m.director_id = d.id
LEFT JOIN tickets t ON m.id = t.movie_id
GROUP BY m.id, d.name;

-- ex 4 liste todos os filmes, incluindo 
-- aqueles que não têm um diretor associado

select *
from movies;

-- ex 5 Liste todos os filmes que têm tickets 
-- e seus diretores, incluindo os filmes sem tickets

SELECT m.name AS filme, d.name AS diretor
FROM movies m
LEFT JOIN directors d ON m.director_id = d.id;

-- ex 6 Liste todos os filmes que têm tickets e 
-- seus diretores, incluindo os diretores sem filmes 

SELECT m.name AS filme, d.name AS diretor, COUNT(t.id) AS tickets_vendidos
FROM movies m
LEFT JOIN directors d ON m.director_id = d.id
LEFT JOIN tickets t ON m.id = t.movie_id
GROUP BY m.id, d.name;

-- ex 7 Liste todos os filmes que 
-- não têm tickets e seus diretores 

SELECT m.name AS filme, d.name AS diretor
FROM movies m
LEFT JOIN directors d ON m.director_id = d.id
LEFT JOIN tickets t ON m.id = t.movie_id
WHERE t.id IS NULL;
